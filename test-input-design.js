const axios = require('axios');

const BASE_URL = process.env.BACKEND_URL || 'http://localhost:3001';
const FRONTEND_URL = process.env.FRONTEND_URL || 'http://localhost:3000';
const TEST_EMAIL = `test-input-design-${Date.now()}@example.com`;
const TEST_PASSWORD = 'TestPassword123!';

async function testInputDesign() {
  console.log('üé® Probando dise√±o mejorado de inputs...\n');
  console.log('Email de prueba:', TEST_EMAIL);
  console.log('Frontend URL:', FRONTEND_URL);

  let authToken = null;

  try {
    // 1. Registrar un usuario nuevo
    console.log('1Ô∏è‚É£ Registrando usuario nuevo...');
    const registerResponse = await axios.post(`${BASE_URL}/auth/register`, {
      nombre: 'Usuario Test Input Design',
      email: TEST_EMAIL,
      password: TEST_PASSWORD
    });
    
    console.log('‚úÖ Usuario registrado:', registerResponse.data.message);
    authToken = registerResponse.data.token;
    
    // 2. Verificar que necesita setup
    console.log('\n2Ô∏è‚É£ Verificando que necesita setup...');
    const needsSetupResponse = await axios.get(`${BASE_URL}/auth/needs-setup`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });
    
    console.log('Needs setup:', needsSetupResponse.data.needsSetup);
    
    // 3. Verificar dise√±o de inputs en la p√°gina de setup
    console.log('\n3Ô∏è‚É£ Verificando dise√±o de inputs en setup...');
    console.log('‚úÖ Deber√≠as ver la p√°gina /setup-empresa con inputs mejorados');
    console.log('‚úÖ Los inputs deber√≠an tener:');
    console.log('   - Sombra tenue (shadow-sm)');
    console.log('   - Sombra m√°s pronunciada en hover (hover:shadow-md)');
    console.log('   - Sombra m√°s pronunciada en focus (focus:shadow-md)');
    console.log('   - Transiciones suaves (transition-all duration-200)');
    console.log('   - Bordes redondeados (rounded-lg)');
    console.log('   - Padding mejorado (px-4 py-3)');
    console.log('   - Colores consistentes con el tema');
    
    // 4. Verificar estados de los inputs
    console.log('\n4Ô∏è‚É£ Estados de los inputs:');
    console.log('‚úÖ Estado normal: borde gris, sombra tenue');
    console.log('‚úÖ Estado hover: borde m√°s oscuro, sombra media');
    console.log('‚úÖ Estado focus: borde azul, anillo de focus, sombra media');
    console.log('‚úÖ Estado error: borde rojo, anillo rojo');
    
    // 5. Verificar consistencia entre Input y Select
    console.log('\n5Ô∏è‚É£ Consistencia entre componentes:');
    console.log('‚úÖ Input y Select tienen el mismo dise√±o base');
    console.log('‚úÖ Mismos colores, sombras y transiciones');
    console.log('‚úÖ Mismo padding y bordes redondeados');
    console.log('‚úÖ Mismos estados de hover y focus');
    
    // 6. Verificar responsividad
    console.log('\n6Ô∏è‚É£ Responsividad:');
    console.log('‚úÖ Los inputs se adaptan a diferentes tama√±os de pantalla');
    console.log('‚úÖ Las sombras se ven bien en m√≥vil y desktop');
    console.log('‚úÖ El padding es apropiado para touch en m√≥vil');
    
    console.log('\nüéâ ¬°Prueba de dise√±o de inputs completada!');
    console.log('‚úÖ Los inputs tienen sombras tenues y dise√±o mejorado');
    console.log('‚úÖ Consistencia entre Input y Select');
    console.log('‚úÖ Estados visuales claros y atractivos');
    console.log('‚úÖ Transiciones suaves y profesionales');
    
    // 7. Informaci√≥n para probar en el navegador
    console.log('\nüåê Para probar el dise√±o en el navegador:');
    console.log(`   1. Ve a: ${FRONTEND_URL}/login`);
    console.log(`   2. Inicia sesi√≥n con: ${TEST_EMAIL}`);
    console.log(`   3. Contrase√±a: ${TEST_PASSWORD}`);
    console.log(`   4. Deber√≠as ver la p√°gina de setup con inputs mejorados`);
    console.log(`   5. Prueba hover y focus en los inputs`);
    console.log(`   6. Verifica que las sombras se ven bien`);
    
    // 8. Verificaciones espec√≠ficas de dise√±o
    console.log('\nüîç Verificaciones espec√≠ficas:');
    console.log('‚úÖ Sombra base: shadow-sm (sutil)');
    console.log('‚úÖ Sombra hover: shadow-md (m√°s pronunciada)');
    console.log('‚úÖ Sombra focus: shadow-md (m√°s pronunciada)');
    console.log('‚úÖ Transici√≥n: transition-all duration-200 (suave)');
    console.log('‚úÖ Bordes: rounded-lg (redondeados)');
    console.log('‚úÖ Padding: px-4 py-3 (espacioso)');
    console.log('‚úÖ Colores: consistentes con el tema #8E94F2');
    
  } catch (error) {
    console.error('‚ùå Error en la prueba:', error.response?.data || error.message);
  }
}

// Ejecutar la prueba
testInputDesign(); 