const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function debugConfiguracionAlertas() {
  try {
    console.log('üîç Consultando configuraci√≥n de alertas para sensor 1...');
    
    const configuracion = await prisma.configuracionAlerta.findFirst({
      where: { sensorId: 1 },
      include: {
        destinatarios: {
          include: {
            destinatario: true
          }
        }
      }
    });
    
    if (!configuracion) {
      console.log('‚ùå No se encontr√≥ configuraci√≥n de alerta para sensor 1');
      return;
    }
    
    console.log('‚úÖ Configuraci√≥n encontrada:');
    console.log('üìã ID:', configuracion.id);
    console.log('üîó Sensor ID:', configuracion.sensorId);
    console.log('‚úÖ Activo:', configuracion.activo);
    console.log('‚öôÔ∏è Configuraci√≥n Notificaci√≥n:', JSON.stringify(configuracion.configuracionNotificacion, null, 2));
    console.log('üìß Destinatarios:', configuracion.destinatarios.length);
    
    console.log('\nüìã Detalle de destinatarios:');
    configuracion.destinatarios.forEach((dest, index) => {
      console.log(`${index + 1}. Email: ${dest.destinatario.email}`);
      console.log(`   Tel√©fono: ${dest.destinatario.telefono}`);
      console.log(`   Activo: ${dest.destinatario.activo}`);
      console.log(`   Tipo notificaci√≥n: ${dest.tipoNotificacion}`);
      console.log('---');
    });
    
  } catch (error) {
    console.error('‚ùå Error:', error.message);
  } finally {
    await prisma.$disconnect();
  }
}

debugConfiguracionAlertas();
