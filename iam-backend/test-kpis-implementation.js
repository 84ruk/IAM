const axios = require('axios');

// Configuraci√≥n
const BASE_URL = 'http://localhost:3001';
const TEST_EMAIL = 'admin@test.com';
const TEST_PASSWORD = 'password123';

async function testKPIsImplementation() {
  console.log('üß™ Probando implementaci√≥n de KPIs...\n');

  try {
    // 1. Login para obtener token
    console.log('1Ô∏è‚É£ Iniciando sesi√≥n...');
    const loginResponse = await axios.post(`${BASE_URL}/auth/login`, {
      email: TEST_EMAIL,
      password: TEST_PASSWORD
    });

    const token = loginResponse.data.token;
    const headers = { Authorization: `Bearer ${token}` };

    console.log('‚úÖ Login exitoso\n');

    // 2. Probar KPIs b√°sicos
    console.log('2Ô∏è‚É£ Probando KPIs b√°sicos...');
    const kpisResponse = await axios.get(`${BASE_URL}/dashboard/kpis`, { headers });
    console.log('üìä KPIs b√°sicos:', JSON.stringify(kpisResponse.data, null, 2));
    console.log('‚úÖ KPIs b√°sicos funcionando\n');

    // 3. Probar KPIs financieros
    console.log('3Ô∏è‚É£ Probando KPIs financieros...');
    const financialKPIsResponse = await axios.get(`${BASE_URL}/dashboard/financial-kpis`, { headers });
    console.log('üí∞ KPIs financieros:', JSON.stringify(financialKPIsResponse.data, null, 2));
    console.log('‚úÖ KPIs financieros funcionando\n');

    // 4. Probar dashboard completo
    console.log('4Ô∏è‚É£ Probando dashboard completo...');
    const dashboardResponse = await axios.get(`${BASE_URL}/dashboard/data`, { headers });
    console.log('üìà Dashboard data obtenido correctamente');
    console.log('‚úÖ Dashboard completo funcionando\n');

    // 5. Probar cache (hacer la misma petici√≥n dos veces)
    console.log('5Ô∏è‚É£ Probando cache (segunda petici√≥n)...');
    const kpisResponse2 = await axios.get(`${BASE_URL}/dashboard/kpis`, { headers });
    console.log('üìä KPIs b√°sicos (cached):', JSON.stringify(kpisResponse2.data, null, 2));
    console.log('‚úÖ Cache funcionando\n');

    console.log('üéâ ¬°Todas las pruebas pasaron exitosamente!');
    console.log('\nüìã Resumen de implementaci√≥n:');
    console.log('‚úÖ Transacciones implementadas en movimientos');
    console.log('‚úÖ Cache Redis implementado');
    console.log('‚úÖ KPIs optimizados con SQL raw');
    console.log('‚úÖ KPIs financieros implementados');
    console.log('‚úÖ Error handling mejorado');
    console.log('‚úÖ Invalidaci√≥n de cache autom√°tica');

  } catch (error) {
    console.error('‚ùå Error en las pruebas:', error.response?.data || error.message);
    
    if (error.response?.status === 401) {
      console.log('\nüí° Sugerencia: Verifica que el usuario de prueba existe');
    } else if (error.code === 'ECONNREFUSED') {
      console.log('\nüí° Sugerencia: Aseg√∫rate de que el servidor est√© ejecut√°ndose en puerto 3001');
    }
  }
}

// Ejecutar pruebas
testKPIsImplementation(); 