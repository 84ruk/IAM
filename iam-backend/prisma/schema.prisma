generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        

enum TipoIndustria {
  GENERICA
  ROPA
  ALIMENTOS
  ELECTRONICA
  FARMACIA
}

model Empresa {
  id            Int       @id @default(autoincrement())
  nombre        String
  rfc           String?   @unique
  emailContacto String?
  direccion     String?
  fechaCreacion DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  TipoIndustria   TipoIndustria   @default(GENERICA)

  usuarios      Usuario[]
  productos     Producto[]
  proveedores   Proveedor[]
  pedidos       PedidoInventario[]
  movimientos   MovimientoInventario[] 
}

model Usuario {
  id        Int      @id @default(autoincrement())
  empresaId Int
  nombre    String
  email     String   @unique
  password  String?
  rol       Rol
  activo    Boolean  @default(true)
  createdAt DateTime @default(now())
  empresa Empresa @relation(fields: [empresaId], references: [id])

  // Nuevos campos para OAuth
  googleId     String?  @unique
  authProvider String   @default("local")
}

enum Rol {
  SUPERADMIN
  ADMIN
  EMPLEADO
  PROVEEDOR
}


enum TipoProducto {
  GENERICO
  ROPA
  ALIMENTO
  ELECTRONICO
}
enum UnidadMedida {
  UNIDAD
  KILO
  LITRO
  CAJA
  PAQUETE
}

enum EstadoProducto {
  ACTIVO
  INACTIVO
  ELIMINADO
}

enum EstadoProveedor {
  ACTIVO
  INACTIVO
  ELIMINADO
}

model Producto {
  id             Int       @id @default(autoincrement())
  nombre         String
  descripcion    String?
  precioCompra   Float
  precioVenta     Float    
  stockMinimo    Int       @default(10)
  stock          Int       @default(0)
  unidad         UnidadMedida   @default(UNIDAD)
  empresaId      Int
  proveedorId    Int?
  tipoProducto    TipoProducto    @default(GENERICO)
  estado          EstadoProducto  @default(ACTIVO)

  sensores       SensorLectura[]
  movimientos    MovimientoInventario[]
  pedidos        PedidoInventario[]
  empresa        Empresa   @relation(fields: [empresaId], references: [id])
  proveedor      Proveedor? @relation(fields: [proveedorId], references: [id])


//Avanzados
  codigoBarras   String?   @unique
  rfid           String?   @unique
  ubicacion      String?
  sku            String?   @unique
  etiqueta       String?
 



  //Solo para ropa
  talla           String?
  color           String?

 //Alimentos
  temperaturaOptima Float?
  humedadOptima    Float?
 
  creadoEn       DateTime  @default(now())
  actualizadoEn  DateTime  @updatedAt

  @@index([empresaId, etiqueta])
}


model MovimientoInventario {
  id          Int           @id @default(autoincrement())
  tipo        TipoMovimiento
  cantidad    Int
  productoId  Int
  empresaId   Int
  fecha       DateTime      @default(now())
  motivo      String?
  descripcion String?
  estado      EstadoMovimiento @default(ACTIVO)
  createdAt   DateTime      @default(now())

  producto    Producto       @relation(fields: [productoId], references: [id])
  empresa     Empresa        @relation(fields: [empresaId], references: [id])
}

enum TipoMovimiento {
  ENTRADA
  SALIDA
}

enum EstadoMovimiento {
  ACTIVO
  ELIMINADO
}

model Proveedor {
  id         Int        @id @default(autoincrement())
  nombre     String
  email      String?
  telefono   String?
  empresaId  Int
  estado     EstadoProveedor @default(ACTIVO)

  empresa    Empresa     @relation(fields: [empresaId], references: [id])
  productos  Producto[]
  pedidos    PedidoInventario[]

  @@unique([empresaId, nombre])
  @@unique([empresaId, email])
}

model PedidoInventario {
  id           Int           @id @default(autoincrement())
  productoId   Int
  proveedorId  Int
  cantidad     Int
  fechaPedido  DateTime       @default(now())
  estado       EstadoPedido   @default(PENDIENTE)
  empresaId    Int

  producto     Producto       @relation(fields: [productoId], references: [id])
  proveedor    Proveedor      @relation(fields: [proveedorId], references: [id])
  empresa      Empresa        @relation(fields: [empresaId], references: [id])

  @@index([empresaId, estado])
}

enum EstadoPedido {
  PENDIENTE
  ENVIADO
  RECIBIDO
}

model SensorLectura {
  id          Int         @id @default(autoincrement())
  tipo        SensorTipo
  valor       Float
  unidad      String
  productoId  Int?
  fecha       DateTime    @default(now())

  producto    Producto?   @relation(fields: [productoId], references: [id])

  @@index([productoId, tipo])
  @@index([productoId, fecha])
}

enum SensorTipo {
  PESO
  TEMPERATURA
  HUMEDAD
  RFID
}
