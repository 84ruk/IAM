const axios = require('axios');

async function testCookies() {
  console.log('üç™ Probando cookies de autenticaci√≥n...\n');

  try {
    // 1. Verificar si hay cookies en el backend
    console.log('1Ô∏è‚É£ Verificando cookies en el backend...');
    try {
      const response = await axios.get('http://localhost:3001/auth/me', {
        withCredentials: true
      });
      console.log('‚úÖ Sesi√≥n activa encontrada');
      console.log('   Usuario:', response.data);
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚ùå No hay sesi√≥n activa (401 Unauthorized)');
        console.log('   Mensaje:', error.response.data.message);
      } else {
        console.log('‚ùå Error inesperado:', error.response?.status);
      }
    }
    console.log('');

    // 2. Probar login para crear una nueva sesi√≥n
    console.log('2Ô∏è‚É£ Probando login para crear sesi√≥n...');
    try {
      const loginResponse = await axios.post('http://localhost:3001/auth/login', {
        email: 'baruk066@gmail.com',
        password: 'test123' // Usar una contrase√±a de prueba
      }, {
        withCredentials: true
      });
      console.log('‚úÖ Login exitoso');
      console.log('   Usuario:', loginResponse.data.user);
      console.log('   Token:', loginResponse.data.accessToken ? 'Presente' : 'Ausente');
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚ùå Credenciales inv√°lidas (401 Unauthorized)');
        console.log('   Mensaje:', error.response.data.message);
      } else {
        console.log('‚ùå Error en login:', error.response?.status);
        console.log('   Mensaje:', error.response?.data?.message || error.message);
      }
    }
    console.log('');

    // 3. Verificar si el login cre√≥ una sesi√≥n
    console.log('3Ô∏è‚É£ Verificando sesi√≥n despu√©s del login...');
    try {
      const sessionResponse = await axios.get('http://localhost:3001/auth/me', {
        withCredentials: true
      });
      console.log('‚úÖ Sesi√≥n creada exitosamente');
      console.log('   Usuario:', sessionResponse.data);
    } catch (error) {
      if (error.response?.status === 401) {
        console.log('‚ùå Sesi√≥n no se cre√≥ correctamente (401 Unauthorized)');
      } else {
        console.log('‚ùå Error verificando sesi√≥n:', error.response?.status);
      }
    }

  } catch (error) {
    console.error('‚ùå Error general:', error.message);
  }
}

testCookies();
